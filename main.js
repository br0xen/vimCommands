/* 
 This file was generated by Dashcode.  
 You may edit this file to customize your widget or web page 
 according to the license.txt file included in the project.
 */

//
// Function: load()
// Called by HTML body element's onload event when the widget is ready to start
//
function load()
{
    dashcode.setupParts();
}

//
// Function: remove()
// Called when the widget has been removed from the Dashboard
//
function remove()
{
    // Stop any timers to prevent CPU usage
    // Remove any preferences as needed
    // widget.setPreferenceForKey(null, dashcode.createInstancePreferenceKey("your-key"));
}

//
// Function: hide()
// Called when the widget has been hidden
//
function hide()
{
    // Stop any timers to prevent CPU usage
}

//
// Function: show()
// Called when the widget has been shown
//
function show()
{
    sectionChangeHandler();
}

//
// Function: sync()
// Called when the widget has been synchronized with .Mac
//
function sync()
{
    // Retrieve any preference values that you need to be synchronized here
    // Use this for an instance key's value:
    // instancePreferenceValue = widget.preferenceForKey(null, dashcode.createInstancePreferenceKey("your-key"));
    //
    // Or this for global key's value:
    // globalPreferenceValue = widget.preferenceForKey(null, "your-key");
}

//
// Function: showBack(event)
// Called when the info button is clicked to show the back of the widget
//
// event: onClick event from the info button
//
function showBack(event)
{
    var front = document.getElementById("front");
    var back = document.getElementById("back");

    if (window.widget) {
        widget.prepareForTransition("ToBack");
    }

    front.style.display = "none";
    back.style.display = "block";

    if (window.widget) {
        setTimeout('widget.performTransition();', 0);
    }
}

//
// Function: showFront(event)
// Called when the done button is clicked from the back of the widget
//
// event: onClick event from the done button
//
function showFront(event)
{
    var front = document.getElementById("front");
    var back = document.getElementById("back");

    if (window.widget) {
        widget.prepareForTransition("ToFront");
    }

    front.style.display="block";
    back.style.display="none";

    if (window.widget) {
        setTimeout('widget.performTransition();', 0);
    }
}

if (window.widget) {
    widget.onremove = remove;
    widget.onhide = hide;
    widget.onshow = show;
    widget.onsync = sync;
}

var file_map = [];
file_map['dd1']="basics.html";
file_map['dd2']="search.html";
file_map['dd3']="replace.html";
file_map['dd4']="case.html";
file_map['dd5']="readwritefiles.html";
file_map['dd6']="fileexplorer.html";
file_map['dd7']="unix.html";
file_map['dd8']="align.html";
file_map['dd9']="tabs.html";
file_map['dd10']="windowsplit.html";
file_map['dd11']="autocomplete.html";
file_map['dd12']="marks.html";
file_map['dd13']="abbr.html";
file_map['dd14']="textindent.html";
file_map['dd15']="syntax.html";

function displayAll() {
    var displayHTML = "";
    for(var idx in file_map) {
        displayHTML+=readURL(file_map[idx]);
    }
    document.getElementById('maincontent').innerHTML = displayHTML;
    document.getElementById("scrollArea").object.refresh();
    document.getElementById("scrollArea").object.verticalScrollTo(0,0); 
}

function sectionChangeHandler() {
    var popupValue = document.getElementById("sectionPopup");	// replace with ID of popup
    popupValue = popupValue.object.getValue();
    
    switch(popupValue) {
        case "All":
            displayAll();
            break;
        default:
            contentFile=file_map[popupValue];
    }
alert(contentFile);
    displayHTML = readUrl(contentFile);
    document.getElementById("maincontent").innerHTML = displayHTML;
    document.getElementById("scrollArea").object.refresh();
    document.getElementById("scrollArea").object.verticalScrollTo(0,0);
}

function readUrl(filename)
{
    var req = new XMLHttpRequest();

    url = "Content/" + filename;
    req.open("GET", url ,false);
    req.send(null);
           
    //req.responseText returns a string
    response = req.responseText; 
    return response;
}
